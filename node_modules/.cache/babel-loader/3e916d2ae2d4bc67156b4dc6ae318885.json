{"ast":null,"code":"import { GET_ALL_CARS, CARS_ERROR } from \"../actions/types\";\nconst initialState = {\n  cars: [],\n  error: null\n};\n\nconst carsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_CARS:\n      return { ...state,\n        cars: action.payload\n      };\n\n    case CARS_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default carsReducer;","map":{"version":3,"names":["GET_ALL_CARS","CARS_ERROR","initialState","cars","error","carsReducer","state","action","type","payload"],"sources":["C:/Users/Asus/Documents/frontend TA/coba/src/redux/reducers/carsReducer.js"],"sourcesContent":["import { GET_ALL_CARS, CARS_ERROR } from \"../actions/types\";\n\nconst initialState = {\n  cars: [],\n  error: null,\n};\n\nconst carsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_CARS:\n      return {\n        ...state,\n        cars: action.payload,\n      };\n    case CARS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default carsReducer;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,kBAAzC;AAEA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EADa;EAEnBC,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,YAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELH,IAAI,EAAEI,MAAM,CAACE;MAFR,CAAP;;IAIF,KAAKR,UAAL;MACE,OAAO,EACL,GAAGK,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAIF;MACE,OAAOH,KAAP;EAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}